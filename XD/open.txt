tls_client


import re
import tls_client
import random
import time
import telebot

# Initialize bot with your API key
API_KEY = "7263718258:AAG3k7zEQQUPHNhUsgTzRFEgMlBa5ya97iM"
bot = telebot.TeleBot(API_KEY)

linkvertise = "https://linkvertise.com/"

session = tls_client.Session(
    client_identifier="Firefox110",
    random_tls_extension_order=True
)

browser_version = random.randint(110, 115)

headers = {
    # put your own headers here !
}

key_regex = r'let content = \("([^"]+)"\);'

# Define bot command to start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message, "Welcome! Please enter the Key Link:")

# Handle text messages
@bot.message_handler(func=lambda message: True)
def handle_message(message):
    link = message.text

    if not link.startswith("https://flux.li/android/external/start.php?HWID="):
        bot.reply_to(message, "Invalid link! It should look something like this https://flux.li/android/external/start.php?HWID=...")
        return

    hwid = link.replace("https://flux.li/android/external/start.php?HWID=", "")
    bot.reply_to(message, f"Got HWID: {hwid}")

    endpoints = [
        {
            "url": f"https://flux.li/android/external/start.php?HWID={hwid}",
            "referer": ""
        },
        {
            "url": f"https://flux.li/android/external/start.php?[OFFSET_REPLACE]=false&HWID={hwid}",
            "referer": f"https://flux.li/android/external/start.php?HWID={hwid}"
        },
        {
            "url": "https://flux.li/android/external/check1.php",
            "referer": linkvertise
        },
        {
            "url": "https://fluxteam.net/android/checkpoint/check2.php",
            "referer": linkvertise
        },
        {
            "url": "https://fluxteam.net/android/checkpoint/main.php",
            "referer": linkvertise
        },
    ]

    OFFSET = ""

    def bypass_link(hwid):
        safe_mode = False

        safe_mode_inp = message.text.lower()
        if safe_mode_inp == "yes":
            safe_mode = True
            bot.reply_to(message, "Safe mode enabled, this will delay the time between requests so it looks like you are just manually getting the key!")

        for i in range(len(endpoints)):
            url = endpoints[i]["url"].replace("[OFFSET_REPLACE]", OFFSET)
            referer = endpoints[i]["referer"]

            headers["referer"] = referer
            response = session.get(
                url,
                headers=headers
            )

            if i == 0:
                match = re.search(r'start.php\?(.*?)=false&HWID=', response.text)
                if match:
                    OFFSET = match.group(1)
                else:
                    bot.reply_to(message, "Fluxus has patched the bypass, wait for a fix from the developer.")
                    return

            if response.status_code != 200:
                bot.reply_to(message, f"[{i}] Failed to bypass | Status code: {response.status_code}")
                return

            if i == len(endpoints) - 1:
                match = re.search(key_regex, response.text)
                if match:
                    content = match.group(1)
                    bot.reply_to(message, f"Bypassed successfully! Code: {content}")
                else:
                    bot.reply_to(message, "Bypassed not successfully! Code: None")
                    return

            if safe_mode:
                time.sleep(random.randint(4, 7))

    bypass_link(hwid)

bot.polling()
